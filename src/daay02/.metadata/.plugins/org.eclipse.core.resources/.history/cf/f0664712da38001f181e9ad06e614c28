package ex;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Ex02 {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Library02 library = new Library02();
        
        while (true) {
            System.out.println("1: 회원, 2: 비회원, 3: 나가기 ");
            int ch = sc.nextInt();
            sc.nextLine();

            User02 user;
            if (ch == 1) {
                user = new Member02(sc);
            } else if (ch == 2) {
                user = new NonMember02(sc);
            } else if (ch == 3) {
                System.out.println("이용해주셔서 감사합니다.");
                break;
            } else {
                System.out.println("번호를 잘못 입력하셨습니다 다시 선택해주세요");
                continue;
            }

            while (true) {
                System.out.println("1: 대출, 2: 반납, 3: 조회, 4: 전체조회, 5: 대출연장, 6: 뒤로가기");
                int ac = sc.nextInt();
                sc.nextLine();

                if (ac == 1) {
                    user.borrowBook02(library);
                } else if (ac == 2) {
                    user.returnBook();
                } else if (ac == 3) {
                    user.viewInfo();
                } else if (ac == 4) {
                    library.printAllBooks();
                } else if (ac == 5) {
                    user.extendBorrowPeriod();
                } else if (ac == 6) {
                    break;
                } else {
                    System.out.println("번호를 잘못 입력하셨습니다 다시 선택해주세요");
                }
            }
        }
        sc.close();
    }
}

class Book02 {
    private String title;
    private String type;

    public Book02(String title, String type) {
        this.title = title;
        this.type = type;
    }

    public String getTitle() {
        return title;
    }

    public String getType() {
        return type;
    }
}

class Library02 {
    private List<Book02> books;

    public Library02() {
        books = new ArrayList<>();
        books.add(new Book02("Philosophy Book", "Philosophy"));
        books.add(new Book02("Religion Book", "Religion"));
        books.add(new Book02("Science Book", "Science"));
        books.add(new Book02("Art Book", "예술"));
        books.add(new Book02("Language Book", "언어"));
        books.add(new Book02("Literature Book", "Literature"));
        books.add(new Book02("History Book", "History"));
    }

    public List<Book02> getBooks() {
        return books;
    }

    public void printAllBooks() {
        for (Book02 book : books) {
            System.out.println("Title: " + book.getTitle() + ", Type: " + book.getType());
        }
    }
}

abstract class User02 {
    protected Scanner sc;
    protected String name;
    protected List<Book02> borrowedBooks;
    protected int borrowLimit;

    public User02(Scanner sc) {
        this.sc = sc;
        System.out.println("이름을 입력해주세요: ");
        this.name = sc.nextLine();
        this.borrowedBooks = new ArrayList<>();
    }

    public void borrowBook(Library02 library) {
        if (borrowedBooks.size() < borrowLimit) {
            System.out.println("대출할 책을 선택해주세요: ");
            library.printAllBooks();
            String bookTitle = sc.nextLine();
            for (Book02 book : library.getBooks()) {
                if (book.getTitle().equalsIgnoreCase(bookTitle)) {
                    borrowedBooks.add(book);
                    System.out.println("대출 완료: " + bookTitle);
                    return;
                }
            }
            System.out.println("책을 찾을 수 없습니다.");
        } else {
            System.out.println("대출 한도 초과");
        }
    }

    public void returnBook() {
        System.out.println("반납할 책을 입력해주세요: ");
        String bookTitle = sc.nextLine();
        for (Book02 book : borrowedBooks) {
            if (book.getTitle().equalsIgnoreCase(bookTitle)) {
                borrowedBooks.remove(book);
                System.out.println("반납 완료: " + bookTitle);
                return;
            }
        }
        System.out.println("대출 내역에 없는 책입니다.");
    }

    public void viewInfo() {
        System.out.println("이름: " + name);
        System.out.println("대출 중인 책들:");
        for (Book02 book : borrowedBooks) {
            System.out.println("Title: " + book.getTitle() + ", Type: " + book.getType());
        }
    }

    public abstract void extendBorrowPeriod();
}

class Member02 extends User02 {

    public Member02(Scanner sc) {
        super(sc);
        this.borrowLimit = 5;
    }

    @Override
    public void extendBorrowPeriod() {
        System.out.println("대출 기간이 연장되었습니다.");
    }
}

class NonMember02 extends User02 {

    public NonMember02(Scanner sc) {
        super(sc);
        this.borrowLimit = 3;
    }

    @Override
    public void extendBorrowPeriod() {
        System.out.println("비회원은 대출 기간을 연장할 수 없습니다.");
    }
}
